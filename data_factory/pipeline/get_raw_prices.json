{
	"name": "get_raw_prices",
	"properties": {
		"activities": [
			{
				"name": "prepare_table",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "ls_sql_server",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "TRUNCATE TABLE raw.Prices;"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "clean_up_table",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "fetch_data_in_loop",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "copy_prices_index",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "ls_sql_server",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "DELETE FROM raw.Prices where Ticker is null;"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "fetch_data_in_loop",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "prepare_table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().globalParameters.Row_Chunks",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "lookup_tickers",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('SELECT Ticker\nFROM raw.Tickers\nWHERE SecType in (', '''','Stock','''',',','''','ETF','''', ')\nORDER BY Ticker \nOFFSET ' ,item() ,'ROWS\nFETCH NEXT 500 ROWS ONLY'\n)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "ds_generic_sql_db",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "copy_prices",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "lookup_tickers",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 3,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "01:00:00",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "POST",
									"requestBody": {
										"value": "@{json(concat('{\"tickers\":' ,activity('lookup_tickers').output.value ,'}'))}",
										"type": "Expression"
									},
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"dataIntegrationUnits": 2
							},
							"inputs": [
								{
									"referenceName": "ds_prices_alpaca_source_rest_api",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ds_generic_sql_table",
									"type": "DatasetReference",
									"parameters": {
										"SchemaName": "raw",
										"TableName": "Prices"
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "lookup_index_tickers",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "prepare_table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT Ticker\nFROM raw.Tickers\nWHERE SecType in ('Index')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_generic_sql_db",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "copy_prices_index",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "lookup_index_tickers",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "01:00:00",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "POST",
						"requestBody": {
							"value": "@{json(concat('{\"tickers\":' ,activity('lookup_index_tickers').output.value ,'}'))}",
							"type": "Expression"
						},
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2
				},
				"inputs": [
					{
						"referenceName": "ds_prices_yfin_source_rest_api",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_generic_sql_table",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "raw",
							"TableName": "Prices"
						}
					}
				]
			}
		],
		"folder": {
			"name": "Staging"
		},
		"annotations": [],
		"lastPublishTime": "2023-07-18T03:12:59Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}